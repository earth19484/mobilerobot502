<?xml version="1.0"?>
<robot name="earthfibo" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!--การสร้างหุ่นหลักๆ จะมี3 ส่วนประกอบหลักคือ 1.visual ถ้าเปรียบเทียบง่ายๆ visual คือ วิญญาณ 2.collision คือ กายหยาบ 3.inertial คือการขยับทำสิ่งต่างๆ
การจะต้องมี3ส่วนประกอบ กรณีขาดไปอย่างใดอย่างหนึ่ง จะทำให้หุ่นเรา้เจอปัญหาได้ เช่น กรณีหุ่นชนสิ่งกีดขวาง ถ้าไม่มี collision มันจะทะลุผ่านไปเลย 
การเขียน visual collision สามารถสร้างรูปทรงต่างๆได้ เช่น ทรงกลม สี่เหลี่ยม    
สิ่งที่ขาดไม่ได้เลยในการทำหุ่นยนต์คือ joint  joint จะเป็นตัวเชื่อมส่วนประกอบต่างๆให้หุ่นสามารถเคลื่อนที่ได้ 
สิ่งสำคัญในการออกแบบหุ่นคือ 

 -->
<link name="body">
<!--สร้างโครงหุ่น-->
    <visual> 
          <geometry>
           <box size="0.25 0.16 0.10"/>
          </geometry>
         <origin rpy="0 0 0" xyz="0 0 0.085"/>
          <material name="white">
           <color rgba="1 1 1 1"/>
         </material>
    </visual>
    
    <inertial>
     <origin xyz="0.03 0 0.085" rpy="0 0 0"/>
     <mass value="6"/>
     <inertia ixx="0.1"  ixy="0"  ixz="0" iyy="0.1" iyz="0" izz="0.1" />
   </inertial>
   
   
   <collision>
     <origin rpy="0 0 0" xyz="0 0 0.085"/>
     <geometry>
         <box size="0.25 0.16 0.10"/>
     </geometry>
   </collision>
   
    </link>

     <!--สร้างล้อซ้าย-->
     <link name="left_wheel">
       <visual>
         <geometry>
           <cylinder length="0.04" radius="0.05"/>
         </geometry>
         <origin rpy="0 0 0" xyz="0 0 0"/>
         <material name="black">
           <color rgba="0 0 0 1"/>
         </material>
       </visual>
       
       <collision name="collision">
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
             <cylinder length="0.008" radius="0.046"/>
          </geometry>
        </collision>  
        
        <inertial>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <mass value="1"/>
     <inertia ixx="0.1"  ixy="0"  ixz="0" iyy="0.1" iyz="0" izz="0.1" />
   </inertial>
       
     </link>

     <joint name="base_to_left_wheel" type="continuous">
       <parent link="body"/>
       <child link="left_wheel"/>
       <origin xyz="-0.09 0.115 0.046" rpy="1.5708 0 0"/>
       <axis xyz="0 0 -1"/>
       
        <limit effort ='10' velocity='20'/>
        <dynamics damping='0.3'/>
     </joint>

    <!--สร้างล้อขวา-->
    <link name="right_wheel">
       <visual>
         <geometry>
          <cylinder length="0.04" radius="0.05"/>
         </geometry>
         <origin rpy="0 0 0" xyz="0 0 0"/>
         <material name="black">
           <color rgba="0 0 0 1"/>
         </material>
       </visual>
       
        <collision name="collision">
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
             <cylinder length="0.008" radius="0.046"/>
          </geometry>
        </collision>
        
        <inertial>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <mass value="1"/>
     <inertia ixx="0.1"  ixy="0"  ixz="0" iyy="0.1" iyz="0" izz="0.1" />
   </inertial>
   
     </link>
     
     <joint name="base_to_right_wheel" type="continuous">
       <parent link="body"/>
       <child link="right_wheel"/>
       <origin xyz="-0.09 -0.115 0.046" rpy="-1.5708 0 0"/>
        <axis xyz="0 0 1"/>
        <limit effort ='10' velocity='20'/>
        <dynamics damping='0.3'/>
     </joint>
     
     <!--สร้างล้อหน้า-->
     <link name="fwheel">
       <visual>
         <geometry>
           <sphere radius="0.023"/> 
         </geometry>
         <origin rpy="1.578 0 0" xyz="0 0 0"/>
         <material name="black">
           <color rgba="0 0 0 1"/>
         </material>
       </visual>
        <collision name="collision">
           <origin rpy="1.578 0 0" xyz="0 0 0"/>
          <geometry>
             <sphere radius="0.023"/> 
          </geometry>
        </collision>
        <inertial>
     <origin xyz="0 0 0.05" rpy="0 0 0"/>
     <mass value="1"/>
     <inertia ixx="0.3"  ixy="0"  ixz="0" iyy="0.3" iyz="0" izz="0.3" />
   </inertial>
     </link>
     
     <joint name="base_to_fwheel" type="continuous">
       <parent link="body"/>
       <child link="fwheel"/>
       <origin xyz="0.09 0 0.023" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
     </joint>



   <!--สร้างกล้อง-->
  <joint name="camera_joint" type="fixed">
    
    <origin xyz="0.105 0 0.1" rpy="0 0 0" />
    <parent link="body"/>
    <child link="camera_link"/>
    <axis xyz="0 1 0"/>
  </joint>


  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
     <box size="0.05 0.05 0.05"/>
      </geometry>
       <material name="red">
       <color rgba="0 1.0 1.0 1.0"/>
     </material>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

 <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 0 1" />
    <origin xyz="0 0 0.18" rpy="0 0 0"/>
    <parent link="body"/>
    <child link="hokuyo_link"/>
  </joint>


  <!--สร้างlidar sensor-->
  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://earth_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

 <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
<!--plugin controller-->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>${1000}</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>base_to_left_wheel</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>base_to_right_wheel</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.2</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.1</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_footprint</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>

<!--gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/earthfibo</robotNamespace>
  </plugin>
</gazebo-->


</robot>















































